name: "RocketChat Cuida News ðŸŽ‰"
on:
  release:
    types: 
      - published
      - edited
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Debug event information
      run: |
        echo "Event Name: ${{ github.event_name }}"
        echo "Action: ${{ github.action }}"
        echo "Ref: ${{ github.ref }}"
        echo "Release Tag: ${{ github.event.release.tag_name }}"
        echo "Release URL: ${{ github.event.release.html_url }}"
    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=VERSION::${{ github.event.release.tag_name }}
    - name: Get release notes
      id: get_release_notes
      run: |
        release_notes=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" ${{ github.event.release.url }})
        echo ::set-output name=RELEASE_NOTES::$release_notes
    - name: Send notification to Rocket.Chat
      env:
        WEBHOOK_URL: ${{ secrets.ROCKET_CHAT_HOOK }}
        RELEASE_TAG: ${{ steps.get_version.outputs.VERSION }}
        RELEASE_URL: ${{ github.event.release.html_url }}
        RELEASE_NOTES: ${{ steps.get_release_notes.outputs.RELEASE_NOTES }}
      run: |
        echo "Enviando notificaÃ§Ã£o com:"
        echo "Tag: ${RELEASE_TAG}"
        echo "URL: ${RELEASE_URL}"
        echo "Notas de release: ${RELEASE_NOTES}"
        MESSAGE="Nova release publicada: ${RELEASE_TAG}\n\n${RELEASE_NOTES}"
        curl -X POST -H 'Content-Type: application/json' --data "{\"text\":\"${MESSAGE}\"}" ${WEBHOOK_URL}
    - name: Output curl result
      if: failure()
      run: echo "Falha ao enviar notificaÃ§Ã£o. Verifique se o webhook do Rocket.Chat estÃ¡ configurado corretamente."
